{"version":3,"sources":["api/Fetching.js","components/User/index.js","components/User/User.js","components/Comment/index.js","components/Comment/Comment.js","components/CommentList/index.js","components/CommentList/CommentList.js","components/Post/index.js","components/Post/Post.js","components/PostList/index.js","components/PostList/PostList.js","App.js","index.js"],"names":["getPostsFromServer","response","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getCommentsFromServer","_context2","getUsersFromServer","_context3","User","_ref","name","email","address","react_default","createElement","concat","city","Comment","body","className","CommentList","list","map","item","components_Comment","Object","assign","key","id","Post","searchedText","title","comments","user","highlightText","text","split","RegExp","part","i","Fragment","toLowerCase","Segment","color","Header","as","components_User","components_CommentList","PostList","posts","searchedResult","post","components_Post","App","allData","_useState","useState","_useState2","slicedToArray","originalPosts","setOriginalPosts","_useState3","_useState4","mixedPosts","setMixedPosts","_useState5","_useState6","isLoaded","setLoaded","_useState7","_useState8","isLoading","setLoad","_useState9","_useState10","isError","setError","_useState11","_useState12","searchValue","setInputValue","debounceSearching","f","delay","timer","clearTimeout","_len","arguments","length","args","Array","_key","setTimeout","apply","debounce","value","filter","_ref3","includes","Input","type","icon","placeholder","onChange","_ref4","target","slice","components_PostList","onClick","_ref2","postsData","usersData","commentsData","Promise","all","objectSpread2","find","userId","comment","postId","t0","disabled","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e98d8409.chunk.js","sourcesContent":["const POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst COMMENTS_URL = 'https://jsonplaceholder.typicode.com/comments';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getPostsFromServer = async() => {\n  const response = await fetch(POSTS_URL);\n\n  return response.json();\n};\n\nexport const getCommentsFromServer = async() => {\n  const response = await fetch(COMMENTS_URL);\n\n  return response.json();\n};\n\nexport const getUsersFromServer = async() => {\n  const response = await fetch(USERS_URL);\n\n  return response.json();\n};\n","import User from './User';\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name, email, address }) => (\n  <div>\n    <h3>{`Author: ${name}`}</h3>\n    <p>{`Email: ${email}`}</p>\n    <p>{`City: ${address.city}`}</p>\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import Comment from './Comment';\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ name, email, body }) => (\n  <div className=\"comment\">\n    <h3 className=\"comment__title\">{`Comment: ${name}`}</h3>\n    <p className=\"comment__content\">{body}</p>\n    <p className=\"comment__user-email\">{email}</p>\n  </div>\n);\n\nComment.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n};\n\nexport default Comment;\n","import CommentList from './CommentList';\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment';\n\nconst CommentList = ({ list }) => (\n  <div>\n    {list.map(\n      item => <Comment key={item.id} {...item} />\n    )}\n  </div>\n);\n\nCommentList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n};\n\nexport default CommentList;\n","import Post from './Post';\n\nexport default Post;\n","import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport User from '../User';\nimport CommentList from '../CommentList';\n\nconst Post = ({ searchedText, title, body, comments, user }) => {\n  const highlightText = (text) => {\n    if (!searchedText) {\n      return text;\n    }\n\n    const parts = text.split(new RegExp(`(${searchedText})`, 'gi'));\n\n    return parts.map((part, i) => (\n      <React.Fragment key={`${part + i}`}>\n        {part.toLowerCase() === searchedText.toLowerCase()\n          ? <span>{part}</span>\n          : part}\n      </React.Fragment>\n    ));\n  };\n\n  return (\n    <Segment className=\"posts\" color=\"red\">\n      <Header as=\"h2\">{highlightText(title)}</Header>\n      {highlightText(body)}\n      <Segment color=\"blue\">\n        <User {...user} />\n        <CommentList list={comments} />\n      </Segment>\n    </Segment>\n  );\n};\n\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n  }).isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n  searchedText: PropTypes.string.isRequired,\n};\n\nexport default Post;\n","import PostList from './PostList';\n\nexport default PostList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from '../Post';\n\nconst PostList = ({ posts, searchedResult }) => (\n  <div className=\"container\">\n    {posts.map(\n      post => (\n        <Post\n          searchedText={searchedResult}\n          key={post.id}\n          {...post}\n        />\n      )\n    )}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchedResult: PropTypes.string.isRequired,\n};\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport { Input } from 'semantic-ui-react';\nimport './App.css';\nimport {\n  getCommentsFromServer,\n  getPostsFromServer,\n  getUsersFromServer,\n} from './api/Fetching';\n\nimport PostList from './components/PostList';\n\nconst debounce = (f, delay) => {\n  let timer;\n\n  return (...args) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(f, delay, ...args);\n  };\n};\n\nconst App = () => {\n  const [originalPosts, setOriginalPosts] = useState([]);\n  const [mixedPosts, setMixedPosts] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [isLoading, setLoad] = useState(false);\n  const [isError, setError] = useState(false);\n  const [searchValue, setInputValue] = useState('');\n\n  let allData;\n\n  const loadData = async() => {\n    setLoad(true);\n\n    try {\n      const [postsData, usersData, commentsData] = await Promise.all([\n        getPostsFromServer(),\n        getUsersFromServer(),\n        getCommentsFromServer(),\n      ]);\n\n      allData = postsData.map(\n        post => ({\n          ...post,\n          user: usersData.find(\n            user => post.userId === user.id\n          ),\n          comments: commentsData.filter(\n            comment => post.id === comment.postId\n          ),\n        })\n      );\n\n      setOriginalPosts(allData);\n      setMixedPosts(allData);\n      setLoad(false);\n      setLoaded(true);\n    } catch (e) {\n      setLoad(false);\n      setError(true);\n    }\n  };\n\n  const debounceSearching = debounce(value => setMixedPosts(\n    originalPosts.filter(\n      ({ title, body }) => (title + body).toLowerCase().includes(value)\n    )\n  ), 500);\n\n  const searching = ({ target }) => {\n    const value = target.value.toLowerCase().slice(0, 37);\n\n    setInputValue(value);\n    debounceSearching(value);\n  };\n\n  return (\n    <div>\n      <h1 className=\"header\">Dynamic list of posts</h1>\n\n      {isLoaded ? (\n        <>\n          <Input\n            type=\"search\"\n            icon=\"search\"\n            placeholder=\"Search...\"\n            onChange={searching}\n            value={searchValue}\n            className=\"search-panel\"\n          />\n\n          <PostList\n            posts={mixedPosts}\n            searchedResult={searchValue}\n          />\n        </>\n      ) : (\n        <>\n          <h2>\n            {isError ? 'Error' : ''}\n          </h2>\n\n          <button\n            type=\"button\"\n            onClick={loadData}\n            disabled={isLoading}\n          >\n            {isLoading ? 'Loading...' : 'Load'}\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}